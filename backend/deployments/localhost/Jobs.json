{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isFinished",
          "type": "bool"
        }
      ],
      "name": "jobAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePaid",
          "type": "uint256"
        }
      ],
      "name": "jobIsFinishedAndPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "jobTaken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addJob",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "setIsFinishedAndPay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "takeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa19e00f6e31a1bf9351a4f2720d06fc6d000c891decc878df410c749959ce677",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1132987",
    "logsBloom": "0x
    "blockHash": "0x6fed660a7f7b91de1331984b1886b50830025f4b86300302bb76a66609ec51b8",
    "transactionHash": "0xa19e00f6e31a1bf9351a4f2720d06fc6d000c891decc878df410c749959ce677",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1132987",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d32d497dfe032e74396b081237983df3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"}],\"name\":\"jobAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePaid\",\"type\":\"uint256\"}],\"name\":\"jobIsFinishedAndPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"jobTaken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addJob\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setIsFinishedAndPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"takeJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mavinigi\",\"kind\":\"dev\",\"methods\":{\"addJob(string)\":{\"params\":{\"_description\":\"the complete description of the job\"}},\"setIsFinishedAndPay(uint256)\":{\"params\":{\"_id\":\"the id of the job in the jobs array\"}},\"takeJob(uint256)\":{\"params\":{\"_id\":\"the index of the job in the jobs array\"}}},\"title\":\"A mini Job Smart Contracty\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addJob(string)\":{\"notice\":\"Allows to add a new job \"},\"setIsFinishedAndPay(uint256)\":{\"notice\":\"Allows to end the job and to pay the worker\"},\"takeJob(uint256)\":{\"notice\":\"Allows to take the job\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Jobs.sol\":\"Jobs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Jobs.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.17;\\n\\n///@title A mini Job Smart Contracty\\n///@author Mavinigi\\n\\ncontract Jobs {\\n\\n    struct Job {\\n        address author;\\n        address worker;\\n        string description;\\n        uint price;\\n        bool isFinished;\\n    }\\n\\n    Job[] jobs;\\n\\n    event jobAdded(address indexed author, string description, uint price, uint id, bool isFinished);\\n    event jobTaken(address indexed worker, uint id);\\n    event jobIsFinishedAndPaid(address indexed author, address indexed worker, uint id, uint pricePaid);\\n\\n    ///@notice Allows to add a new job \\n    ///@param _description the complete description of the job\\n    function addJob(\\n        string calldata _description\\n    ) external payable {\\n        require(msg.value>0, \\\"price input is mandatory and should be positive\\\");\\n        //require(bytes(_description).length>5, \\\"at least 5 letters you lazy bastard\\\");\\n        require(jobs.length<1000, \\\"1000 max to avoid ddos\\\");\\n        Job memory newjob = Job(msg.sender, address(0), _description, msg.value, false);\\n        jobs.push(newjob);\\n        emit jobAdded(msg.sender, _description, msg.value, jobs.length-1, false);\\n    }\\n\\n    ///@notice Allows to take the job\\n    ///@param _id the index of the job in the jobs array\\n    function takeJob(uint _id) external {\\n        require(jobs.length >= _id , \\\"no job with this id\\\");\\n        require(msg.sender != jobs[_id].author, \\\"author cannot take its own job\\\");\\n        require(jobs[_id].worker == address(0), \\\"job already taken\\\");\\n        jobs[_id].worker = msg.sender;\\n        emit jobTaken(msg.sender, _id);\\n    }\\n\\n    ///@notice Allows to end the job and to pay the worker\\n    ///@param _id the id of the job in the jobs array\\n    function setIsFinishedAndPay(uint _id) external {\\n        require(jobs[_id].worker != address(0), \\\"job not taken by a worker\\\");\\n        require(msg.sender == jobs[_id].author, \\\"only the author can close and pay\\\");\\n        (bool paid, ) = jobs[_id].worker.call{value : jobs[_id].price}('');\\n        if (!paid) {\\n            revert(\\\"The worker has not been paid, transaction has been reverted\\\");\\n        } else {\\n            jobs[_id].isFinished = true;\\n            emit jobIsFinishedAndPaid(jobs[_id].author, jobs[_id].worker, _id, jobs[_id].price);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa71a0e936f9b581e4d53ad621d3f8bf7558f3492ebf24b982b7a7932532d15f9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806375cb0ac8146100395780637e8762f7146100555780639330d9bc1461007e575b600080fd5b610053600480360381019061004e91906109e2565b6100a7565b005b34801561006157600080fd5b5061007c60048036038101906100779190610a65565b61033b565b005b34801561008a57600080fd5b506100a560048036038101906100a09190610a65565b61070f565b005b600034116100ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e190610b15565b60405180910390fd5b6103e860008054905010610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610b81565b60405180910390fd5b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001348152602001600015158152509050600081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816102a19190610de7565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f55f4e04c8a8ba099607e3993996c0b30c9d5ff7618c0d8d31e6e7c9ffa60c094848434600160008054905061031b9190610ee8565b600060405161032e959493929190610f93565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff166000828154811061036757610366610fe1565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e69061105c565b60405180910390fd5b6000818154811061040357610402610fe1565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610499906110ee565b60405180910390fd5b60008082815481106104b7576104b6610fe1565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000838154811061051357610512610fe1565b5b9060005260206000209060050201600301546040516105319061113f565b60006040518083038185875af1925050503d806000811461056e576040519150601f19603f3d011682016040523d82523d6000602084013e610573565b606091505b50509050806105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae906111c6565b60405180910390fd5b6001600083815481106105cd576105cc610fe1565b5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055506000828154811061060957610608610fe1565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000838154811061066557610664610fe1565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc9f82f3ab594a0fe3b2a0a3544eb95e67e50437ea6c05bbfeb8414bf42b259fa84600086815481106106e3576106e2610fe1565b5b9060005260206000209060050201600301546040516107039291906111e6565b60405180910390a35050565b806000805490501015610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e9061125b565b60405180910390fd5b6000818154811061076b5761076a610fe1565b5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361080a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610801906112c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000828154811061083657610835610fe1565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b590611333565b60405180910390fd5b33600082815481106108d3576108d2610fe1565b5b906000526020600020906005020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f570fece144bab0037b8b44f5dc22ce6feffce4bae7b0eaf3de66f0730ee24474826040516109689190611353565b60405180910390a250565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126109a2576109a161097d565b5b8235905067ffffffffffffffff8111156109bf576109be610982565b5b6020830191508360018202830111156109db576109da610987565b5b9250929050565b600080602083850312156109f9576109f8610973565b5b600083013567ffffffffffffffff811115610a1757610a16610978565b5b610a238582860161098c565b92509250509250929050565b6000819050919050565b610a4281610a2f565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a610973565b5b6000610a8984828501610a50565b91505092915050565b600082825260208201905092915050565b7f707269636520696e707574206973206d616e6461746f727920616e642073686f60008201527f756c6420626520706f7369746976650000000000000000000000000000000000602082015250565b6000610aff602f83610a92565b9150610b0a82610aa3565b604082019050919050565b60006020820190508181036000830152610b2e81610af2565b9050919050565b7f31303030206d617820746f2061766f69642064646f7300000000000000000000600082015250565b6000610b6b601683610a92565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c2257607f821691505b602082108103610c3557610c34610bdb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c60565b610ca78683610c60565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ce4610cdf610cda84610a2f565b610cbf565b610a2f565b9050919050565b6000819050919050565b610cfe83610cc9565b610d12610d0a82610ceb565b848454610c6d565b825550505050565b600090565b610d27610d1a565b610d32818484610cf5565b505050565b5b81811015610d5657610d4b600082610d1f565b600181019050610d38565b5050565b601f821115610d9b57610d6c81610c3b565b610d7584610c50565b81016020851015610d84578190505b610d98610d9085610c50565b830182610d37565b50505b505050565b600082821c905092915050565b6000610dbe60001984600802610da0565b1980831691505092915050565b6000610dd78383610dad565b9150826002028217905092915050565b610df082610ba1565b67ffffffffffffffff811115610e0957610e08610bac565b5b610e138254610c0a565b610e1e828285610d5a565b600060209050601f831160018114610e515760008415610e3f578287015190505b610e498582610dcb565b865550610eb1565b601f198416610e5f86610c3b565b60005b82811015610e8757848901518255600182019150602085019450602081019050610e62565b86831015610ea45784890151610ea0601f891682610dad565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef382610a2f565b9150610efe83610a2f565b9250828203905081811115610f1657610f15610eb9565b5b92915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610f488385610a92565b9350610f55838584610f1c565b610f5e83610f2b565b840190509392505050565b610f7281610a2f565b82525050565b60008115159050919050565b610f8d81610f78565b82525050565b60006080820190508181036000830152610fae818789610f3c565b9050610fbd6020830186610f69565b610fca6040830185610f69565b610fd76060830184610f84565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f6a6f62206e6f742074616b656e206279206120776f726b657200000000000000600082015250565b6000611046601983610a92565b915061105182611010565b602082019050919050565b6000602082019050818103600083015261107581611039565b9050919050565b7f6f6e6c792074686520617574686f722063616e20636c6f736520616e6420706160008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b60006110d8602183610a92565b91506110e38261107c565b604082019050919050565b60006020820190508181036000830152611107816110cb565b9050919050565b600081905092915050565b50565b600061112960008361110e565b915061113482611119565b600082019050919050565b600061114a8261111c565b9150819050919050565b7f54686520776f726b657220686173206e6f74206265656e20706169642c20747260008201527f616e73616374696f6e20686173206265656e2072657665727465640000000000602082015250565b60006111b0603b83610a92565b91506111bb82611154565b604082019050919050565b600060208201905081810360008301526111df816111a3565b9050919050565b60006040820190506111fb6000830185610f69565b6112086020830184610f69565b9392505050565b7f6e6f206a6f622077697468207468697320696400000000000000000000000000600082015250565b6000611245601383610a92565b91506112508261120f565b602082019050919050565b6000602082019050818103600083015261127481611238565b9050919050565b7f617574686f722063616e6e6f742074616b6520697473206f776e206a6f620000600082015250565b60006112b1601e83610a92565b91506112bc8261127b565b602082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b7f6a6f6220616c72656164792074616b656e000000000000000000000000000000600082015250565b600061131d601183610a92565b9150611328826112e7565b602082019050919050565b6000602082019050818103600083015261134c81611310565b9050919050565b60006020820190506113686000830184610f69565b9291505056fea2646970667358221220f1a401744c423aa7b7dfa3646a1bb111285c2353469a3715c4b8fd9593a9a64064736f6c63430008110033",
  "devdoc": {
    "author": "Mavinigi",
    "kind": "dev",
    "methods": {
      "addJob(string)": {
        "params": {
          "_description": "the complete description of the job"
        }
      },
      "setIsFinishedAndPay(uint256)": {
        "params": {
          "_id": "the id of the job in the jobs array"
        }
      },
      "takeJob(uint256)": {
        "params": {
          "_id": "the index of the job in the jobs array"
        }
      }
    },
    "title": "A mini Job Smart Contracty",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addJob(string)": {
        "notice": "Allows to add a new job "
      },
      "setIsFinishedAndPay(uint256)": {
        "notice": "Allows to end the job and to pay the worker"
      },
      "takeJob(uint256)": {
        "notice": "Allows to take the job"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/Jobs.sol:Jobs",
        "label": "jobs",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Job)13_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Job)13_storage)dyn_storage": {
        "base": "t_struct(Job)13_storage",
        "encoding": "dynamic_array",
        "label": "struct Jobs.Job[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Job)13_storage": {
        "encoding": "inplace",
        "label": "struct Jobs.Job",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Jobs.sol:Jobs",
            "label": "author",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6,
            "contract": "contracts/Jobs.sol:Jobs",
            "label": "worker",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 8,
            "contract": "contracts/Jobs.sol:Jobs",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 10,
            "contract": "contracts/Jobs.sol:Jobs",
            "label": "price",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/Jobs.sol:Jobs",
            "label": "isFinished",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}